% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/uploadFeaturesToEE.R
\name{uploadFeaturesToEE}
\alias{uploadFeaturesToEE}
\title{Upload features to Google Earth Engine server}
\usage{
uploadFeaturesToEE(
  feats,
  asset_id,
  load = TRUE,
  max_feats = 16250,
  max_try = 10,
  monitor = TRUE,
  transfer = list(via = "getInfo_to_asset", bucket = NULL)
)
}
\arguments{
\item{feats}{An \href{https://github.com/r-spatial/sf}{sf} object with the
spatial points or polygons to upload to GEE.}

\item{asset_id}{A character string with the name we want our features be
saved on the server with.}

\item{load}{If TRUE (default), the GEE asset is loaded into the R session.}

\item{max_feats}{Maximum number of features the function will try to upload
without splitting into pieces. The default is a sensible choice but you can
try modify it to serve your purposes.}

\item{max_try}{Maximum number of tries the function checks for the creation
of the asset on GEE.}

\item{monitor}{Logical. If TRUE (default) monitoring printed messages produced
by \code{rgee} will displayed. If FALSE, only high-level messages will be displayed.}

\item{transfer}{A list with parameters used to communicate to and from GEE. It
must have to elements named \code{via} and \code{bucket}. See \code{\link[rgee]{sf_as_ee}}}
}
\value{
Features are uploaded to GEE. In addition the resulting GEE feature
collection can be loaded into the R environment.
}
\description{
Upload features to Google Earth Engine server
}
\details{
At this stage this features must be either polygons representing
pentads from the ABAP project or points representing count locations from the
CWAC project. Both must be in an \href{https://github.com/r-spatial/sf}{sf}
format, and are uploaded to GEE servers via "getInfo_to_asset" (see \link[rgee]{sf_as_ee}).
If there are more than \code{max_feats} features, the function will upload two objects and merge them
in the server under the name provided in \code{asset_id}. Keep in mind that
two intermediate objects will also be stored in the GEE assets directory under
the names "p1" and "p2". We recommend visiting your account and cleaning
unnecesary objects regularly.
The creation of the asset might take some time after all the computations are
finished. The function will check every minute during \code{max_try} minutes, and if
it is not successful at finding the asset, it will return an error.
}
\examples{
\dontrun{
# Load CWAC counts
counts <- CWAC::getCwacSiteCounts(23472927)

# Set an ID for your remote asset (data in GEE)
assetId <- file.path(ee_get_assethome(), 'counts')

# Upload to GEE (if not done already - do this only once per asset)
uploadFeaturesToEE(feats = counts,
                   asset_id = assetId,
                   load = FALSE)

# Load the remote asset to you local computer to work with it
ee_counts <- ee$FeatureCollection(assetId)

# Alternatively we can upload to GEE and load the asset in one call
ee_counts <- uploadFeaturesToEE(feats = counts,
                                asset_id = assetId,
                                load = TRUE)
}
}
